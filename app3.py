import streamlit as st
import pandas as pd
import numpy as np

# Configuraci√≥n general
st.title("ü§ñ Monitoreo Inteligente y Detecci√≥n de Anomal√≠as")
st.write("Simulaci√≥n de sensores industriales con detecci√≥n autom√°tica de anomal√≠as y predicci√≥n de posibles fallas.")

# --- Simulaci√≥n de datos ---
dias = pd.date_range("2025-01-01", periods=20)
np.random.seed(42)

data = {
    "D√≠a": dias,
    "Temperatura (¬∞C)": np.random.normal(30, 3, 20),
    "Humedad (%)": np.random.normal(60, 10, 20),
    "Vibraci√≥n (mm/s)": np.random.normal(1.5, 0.4, 20),
    "Corriente (A)": np.random.normal(6, 1, 20),
    "Voltaje (V)": np.random.normal(230, 5, 20)
}

df = pd.DataFrame(data)

# --- Funci√≥n para detectar anomal√≠as ---
def detectar_anomalias(columna):
    media = df[columna].mean()
    std = df[columna].std()
    limite_inferior = media - 2*std
    limite_superior = media + 2*std
    return (df[columna] < limite_inferior) | (df[columna] > limite_superior)

# Marcar anomal√≠as
for col in df.columns[1:]:
    df[f"An√≥malo {col}"] = detectar_anomalias(col)

# --- Mostrar tabla de datos ---
st.subheader("üìä Datos simulados")
st.dataframe(df)

# --- Mostrar promedios ---
st.subheader("üìà Promedios generales")

col1, col2, col3, col4, col5 = st.columns(5)
col1.metric("Temperatura promedio", f"{df['Temperatura (¬∞C)'].mean():.2f} ¬∞C")
col2.metric("Humedad promedio", f"{df['Humedad (%)'].mean():.2f} %")
col3.metric("Vibraci√≥n promedio", f"{df['Vibraci√≥n (mm/s)'].mean():.2f} mm/s")
col4.metric("Corriente promedio", f"{df['Corriente (A)'].mean():.2f} A")
col5.metric("Voltaje promedio", f"{df['Voltaje (V)'].mean():.2f} V")

# --- Mostrar gr√°ficos simples ---
st.subheader("üìâ Gr√°ficos de sensores")
for col in df.columns[1:6]:
    st.line_chart(df.set_index("D√≠a")[[col]])

# --- Calcular resumen de anomal√≠as ---
st.subheader("‚ö†Ô∏è Resumen de anomal√≠as detectadas")
anomalias_totales = {col: df[f"An√≥malo {col}"].sum() for col in df.columns[1:6]}
anom_df = pd.DataFrame(list(anomalias_totales.items()), columns=["Variable", "N¬∞ de anomal√≠as"])
st.table(anom_df)

# --- Diagn√≥stico autom√°tico ---
st.subheader("üß† Diagn√≥stico predictivo")

riesgo = 0
for col, n in anomalias_totales.items():
    if n > 2:
        st.warning(f"‚ö†Ô∏è Alta cantidad de anomal√≠as en **{col}** ‚Üí posible riesgo futuro.")
        riesgo += 1
    elif n > 0:
        st.info(f"‚ÑπÔ∏è Se detectaron algunas variaciones inusuales en **{col}**.")
    else:
        st.success(f"‚úÖ {col} sin anomal√≠as significativas.")

# --- Predicci√≥n general ---
st.markdown("---")
if riesgo >= 3:
    st.error("üö® Predicci√≥n: **Alta probabilidad de falla pr√≥xima.** Requiere revisi√≥n t√©cnica.")
elif riesgo == 2:
    st.warning("‚ö†Ô∏è Predicci√≥n: **Posible deterioro del sistema.** Monitorear con m√°s frecuencia.")
else:
    st.success("‚úÖ Sistema en condiciones normales. Sin se√±ales de falla.")

st.caption("Simulaci√≥n predictiva desarrollada en Streamlit ‚Äì Alejandro Giraldo")



